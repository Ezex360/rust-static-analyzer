// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ./examples/example1.rs:7:11: 7:11
    let mut _1: i32;                     // in scope 0 at ./examples/example1.rs:8:9: 8:18
    let mut _3: &mut i32;                // in scope 0 at ./examples/example1.rs:9:23: 9:33
    let mut _5: &mut i32;                // in scope 0 at ./examples/example1.rs:10:36: 10:53
    let mut _6: &mut i32;                // in scope 0 at ./examples/example1.rs:10:36: 10:53
    let mut _7: &mut i32;                // in scope 0 at ./examples/example1.rs:10:55: 10:72
    let mut _8: &mut i32;                // in scope 0 at ./examples/example1.rs:10:55: 10:72
    let _9: ();                          // in scope 0 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:9: 97:62
    let mut _10: std::fmt::Arguments;    // in scope 0 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
    let mut _11: &[&str];                // in scope 0 at ./examples/example1.rs:11:14: 11:20
    let mut _12: &[&str; 2];             // in scope 0 at ./examples/example1.rs:11:14: 11:20
    let _13: &[&str; 2];                 // in scope 0 at ./examples/example1.rs:11:14: 11:20
    let mut _14: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
    let mut _15: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
    let _16: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
    let _17: [std::fmt::ArgumentV1; 1];  // in scope 0 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
    let mut _18: (&i32,);                // in scope 0 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
    let mut _19: &i32;                   // in scope 0 at ./examples/example1.rs:11:22: 11:28
    let mut _21: std::fmt::ArgumentV1;   // in scope 0 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
    let mut _22: &i32;                   // in scope 0 at ./examples/example1.rs:11:22: 11:28
    let mut _23: for<'r, 's, 't0> fn(&'r i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at ./examples/example1.rs:11:22: 11:28
    scope 1 {
        debug local => _1;               // in scope 1 at ./examples/example1.rs:8:9: 8:18
        let _2: *mut i32;                // in scope 1 at ./examples/example1.rs:9:9: 9:20
        scope 2 {
            debug raw_pointer => _2;     // in scope 2 at ./examples/example1.rs:9:9: 9:20
            let _4: i32;                 // in scope 2 at ./examples/example1.rs:10:9: 10:15
            scope 3 {
                debug result => _4;      // in scope 3 at ./examples/example1.rs:10:9: 10:15
                let _20: (&i32,);        // in scope 3 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
                let mut _24: &[&str; 2]; // in scope 3 at ./examples/example1.rs:11:14: 11:20
                scope 5 {
                    debug _args => _20;  // in scope 5 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
                }
            }
            scope 4 {
            }
        }
    }

    bb0: {
        _1 = const 5_i32;                // scope 0 at ./examples/example1.rs:8:21: 8:22
        _3 = &mut _1;                    // scope 1 at ./examples/example1.rs:9:23: 9:33
        _2 = &raw mut (*_3);             // scope 1 at ./examples/example1.rs:9:23: 9:33
        _6 = &mut (*_2);                 // scope 4 at ./examples/example1.rs:10:36: 10:53
        _5 = &mut (*_6);                 // scope 4 at ./examples/example1.rs:10:36: 10:53
        _8 = &mut (*_2);                 // scope 4 at ./examples/example1.rs:10:55: 10:72
        _7 = &mut (*_8);                 // scope 4 at ./examples/example1.rs:10:55: 10:72
        _4 = example1(move _5, move _7) -> bb1; // scope 4 at ./examples/example1.rs:10:27: 10:73
                                         // mir::Constant
                                         // + span: ./examples/example1.rs:10:27: 10:35
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut i32, &'s mut i32) -> i32 {example1}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _24 = const main::promoted[0];   // scope 3 at ./examples/example1.rs:11:14: 11:20
                                         // ty::Const
                                         // + ty: &[&str; 2]
                                         // + val: Unevaluated(main, [], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: ./examples/example1.rs:11:14: 11:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:4 ~ example1[252c]::main), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[0]) }) }
        _13 = _24;                       // scope 3 at ./examples/example1.rs:11:14: 11:20
        _12 = _13;                       // scope 3 at ./examples/example1.rs:11:14: 11:20
        _11 = move _12 as &[&str] (Pointer(Unsize)); // scope 3 at ./examples/example1.rs:11:14: 11:20
        _19 = &_4;                       // scope 3 at ./examples/example1.rs:11:22: 11:28
        (_18.0: &i32) = move _19;        // scope 3 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
        _20 = _18;                       // scope 3 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
        _22 = (_20.0: &i32);             // scope 5 at ./examples/example1.rs:11:22: 11:28
        _23 = <i32 as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at ./examples/example1.rs:11:22: 11:28
                                         // mir::Constant
                                         // + span: ./examples/example1.rs:11:22: 11:28
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<i32 as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _21 = std::fmt::ArgumentV1::new::<i32>(move _22, move _23) -> bb2; // scope 5 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32, for<'r, 's, 't0> fn(&'r i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<i32>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        _17 = [move _21];                // scope 5 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
        _16 = &_17;                      // scope 3 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
        _15 = _16;                       // scope 3 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
        _14 = move _15 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 3 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
        _10 = std::fmt::Arguments::new_v1(move _11, move _14) -> bb3; // scope 3 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        _9 = std::io::_print(move _10) -> bb4; // scope 3 at /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/cfa3fe5af339e724209b25715282adae0c61628f/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        return;                          // scope 0 at ./examples/example1.rs:12:2: 12:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ./examples/example1.rs:11:14: 11:20
    let mut _1: [&str; 2];               // in scope 0 at ./examples/example1.rs:11:14: 11:20

    bb0: {
        _1 = [const " ", const " \n"];   // scope 0 at ./examples/example1.rs:11:14: 11:20
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 })
                                         // mir::Constant
                                         // + span: ./examples/example1.rs:11:14: 11:20
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [32, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 2 })
                                         // mir::Constant
                                         // + span: ./examples/example1.rs:11:14: 11:20
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [32, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 2 }) }
        _0 = &_1;                        // scope 0 at ./examples/example1.rs:11:14: 11:20
        return;                          // scope 0 at ./examples/example1.rs:11:14: 11:20
    }
}

